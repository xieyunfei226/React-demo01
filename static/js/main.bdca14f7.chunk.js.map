{"version":3,"sources":["components/List.js","components/Input.js","pages/TodoList.js","index.js"],"names":["List","props","data","map","todo","idx","done","key","style","listStyle","onChange","toggle","checked","type","id","dangerouslySetInnerHTML","__html","title","onClick","delTodo","Input","for","float","width","lineHeight","color","addTodo","marginTop","height","marginLeft","placeholder","value","e","handleChange","textIndent","borderRadius","TodoList","setState","inpValue","target","state","todos","filter","item","index","newTodos","JSON","parse","stringify","localStorage","getItem","this","setItem","arr1","arr2","background","margin","length","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdca14f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n\r\nconst List=(props)=>{\r\n  return props.data.map((todo,idx)=>{\r\n    if(props.done===todo.done){\r\n        return <li  key={idx} style={{listStyle:'none'}}>\r\n            <input\r\n             onChange={()=>props.toggle(idx)}\r\n             checked={props.done}\r\n             type=\"checkbox\" id=\"inp\"\r\n            />\r\n            <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n            <button onClick={()=>props.delTodo(idx)}>删除</button>\r\n        </li>\r\n    }\r\n  })\r\n}\r\n\r\nexport default List;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n\r\n// const List=(props)=>{\r\n//     return <ul>\r\n//       {\r\n//         props.data.map((item)=><li key={item.id}>{item.title}</li>)\r\n//       }\r\n//       </ul>\r\n//   }\r\n\r\n//   export default List;","import React from 'react';\r\n\r\nconst Input = (props)=>{\r\n    return <div>\r\n        <lable for=\"title\" style={{float:'left',width:'100px',lineHeight:'50px',color:'#DDD'}}>TodoList</lable>\r\n        <button onClick={()=>props.addTodo()} style={{float:'right',marginTop:'12px',width:'8%',height:'28px',marginLeft:'5px'}}>add</button>\r\n        <input type='text' placeholder='添加Todo' value={props.data} onChange={(e)=>props.handleChange(e)} id='inp' style={{float:'right',width:'60%',height:'24px',marginTop:'12px',textIndent:'10px',borderRadius:'5px'}}>\r\n        </input>\r\n    </div>\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport List from '../components/List';\r\nimport Input from '../components/Input';\r\n\r\nclass TodoList extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            inpValue:'',\r\n            todos:[\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value})  //将输入的值赋值给inpValue\r\n    }\r\n\r\n    componentDidMount(){  //在第一次渲染后调用，只在客户端\r\n        let todos = localStorage.getItem('todos'); //获得本地存储中的数据\r\n        if(todos){\r\n            this.setState({\r\n                todos:JSON.parse(todos) //将todos字符串转换成对象，然后赋给state中的todos\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){  //在组件完成更新后立即调用，在初始化时不会被调用\r\n        localStorage.setItem(  //数据更新之后调用，把更新过后的数据保存到本地存储中\r\n            'todos',  //key值为todos\r\n            JSON.stringify(this.state.todos)  //value值为转换成字符串的更改过后的state.todos\r\n        )\r\n    }\r\n\r\n\r\n    addTodo = () =>{   //添加todo\r\n        if(this.state.inpValue==''){\r\n            return;\r\n        }\r\n        this.setState({  //向其中添加内容\r\n            todos:[     //添加todos对象,title为输入框输入内容，done默认为false(未完成工作)\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false\r\n                },\r\n                ...this.state.todos //将数组列出\r\n            ]\r\n        })\r\n        this.setState({inpValue:''});\r\n    }\r\n\r\n    delTodo = (idx)=>{   //删除todo内容\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!==idx)  //利用filter过滤\r\n            //filter()方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素\r\n            //删除内容为idx，index为数组的下标，当数组下标不等于要删除的idx时，留下此数据。相当于删除idx\r\n        })\r\n    }\r\n\r\n    toggle=(index)=>{   //打勾或取消打勾\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos //改变todos的done\r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        const{todos,inpValue}=this.state;\r\n        let arr1 = todos.filter(item=>!item.done)\r\n        let arr2 = todos.filter(item=>item.done)\r\n        return(\r\n            // <div>\r\n            //     <div>\r\n            //         <Input data={inpValue} id='inp' handleChange={this.handleChange} addTodo={this.addTodo}/>\r\n            //         <h2>未完成{arr1.length}</h2>\r\n            //         <List data={todos} done={false} toggle={this.toggle} delTodo={this.delTodo}/>   {/* 把state里面的todos传递给子子件List */}\r\n            //         <h2>已完成{arr2.length}</h2>\r\n            //         <List data={todos} done={true} toggle={this.toggle} delTodo={this.delTodo}/>   {/* 把state里面的todos传递给子子件List */}\r\n            //     </div>\r\n            // </div>\r\n\r\n            <div style={{background:'#DDD',height:'600px'}}>\r\n                <div style={{height:'50px',background:'black'}}>\r\n                    <div style={{width:'600px',height:'50px',margin:'0 auto'}}>\r\n                        <Input data={inpValue} id='inp' handleChange={this.handleChange} addTodo={this.addTodo}/>\r\n                    </div>\r\n                </div>\r\n                <div style={{width:'600px',margin:'0 auto'}}>\r\n                    <h2>正在进行{arr1.length}</h2>\r\n                    <List data={todos} done={false} toggle={this.toggle} delTodo={this.delTodo}/>   {/* 把state里面的todos传递给子子件List */}\r\n                    <h2>已经完成{arr2.length}</h2>\r\n                    <List data={todos} done={true} toggle={this.toggle} delTodo={this.delTodo}/>   {/* 把state里面的todos传递给子子件List */}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './pages/TodoList';\n\n\nReactDOM.render(\n  <TodoList />,\n  document.getElementById('root')\n)\n\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import $ from 'jquery';\n// console.log($);\n\n// let ele = <h1 id=\"title\">hello world</h1>\n\n// ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// )\n\n\n\n\n// import React from 'react';\n// // import ReactDOM from 'react-dom';\n\n// // let ele = <h1 id=\"title\">hello world</h1>\n\n// // let ele = React.createElement(\n// //   'h1',\n// //   {id:'title'},\n// //   'hello react'\n// // )\n\n// // let ele = React.createElement(\n// //   'h1',\n// //   {id:'title'},\n// //   React.createElement('div',{},'hello'),\n// //   'react'\n// // )\n\n// // console.log(ele);\n\n\n// let ele = <h1 id='title' className='tit'>\n//   react\n//   <div>hello</div>\n//   <div>hello</div>\n//   <div>hello</div>\n//   <div>hello</div>\n//   <div>{['hello','react']}</div>\n// </h1>;\n// console.log(ele);\n\n// //将JS对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     const {type,props} = eleObj;\n//     let ele = document.createElement(type);\n//     //遍历属性对象，将属性添加到第一层节点对象上\n//     for(const prop in props){\n//       if( prop == 'children'){\n//         if(typeof props.children == 'string'){\n//           const txtNode = document.createTextNode(props[prop]);\n//           ele.appendChild(txtNode);\n//           break;\n//         }\n\n//         //将第一层节点对象的子元素添加进去\n//         props.children.forEach(child =>{\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n//     container.appendChild(ele);\n\n//   }\n// }\n\n// ReactDOM.render(\n//   // <h1>Hello world</h1>,\n//   ele,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// setInterval(()=>{\n\n//   let ele = <h1 id='title' className='tit'>\n//     <div>当前时间</div>\n//     {new Date().toLocaleString()}\n//   </h1>;\n\n//   ReactDOM.render(\n//     ele,\n//     document.getElementById('root')\n//   );\n\n// },1000)\n\n\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n//组件声明\n//函数组件\n//UI(展示)组件，木偶组件\n// function App(props){\n//   console.log(props);\n//   const {title,id} = props;\n//   return <div>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n// ReactDOM.render(\n//   <App title='任意值' id='app'/>,\n//   document.getElementById('root')\n// )\n\n\n\n//智能组件\n// function App(props){\n//   console.log(props);\n//   const {title,id} = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state = {\n//       name:'xff'\n//     }\n//     setTimeout(()=>{\n//       this.setState({name:'abc'})\n//     },3000)\n//   }\n//   //改变setState，render()重新执行\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='abc'/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo />,\n//   document.getElementById('root')\n// )\n\n\n\n// function App(props){\n//   console.log(props);\n//   const {title,id} = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state = {\n//       name:new Date().toLocaleString()\n//     }\n//     setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//     },1000)\n//   }\n//   //改变setState，render()重新执行\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='abc'/>\n//     </div>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo />,\n//   document.getElementById('root')\n// )\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// function App(props){\n//   console.log(props);\n//   const {title,id} = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state = {\n//       data:[1,2,3]\n//     }\n//     setTimeout(()=>{\n//       this.setState({data:[5,6,7,8,9]})\n//     },500)\n//   }\n//   //改变setState，render()重新执行\n//   render(){\n//     return <ul>{\n//       this.state.data.map(\n//         (item)=><li>{item}</li>\n//       )\n//       }\n//     </ul>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo />,\n//   document.getElementById('root')\n// )\n\n\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// function App(props){\n//   console.log(props);\n//   const {title,id} = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state = {\n//       data:[]\n//     }\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(({data})=>{\n//       this.setState({data})\n//     })\n//   }\n//   //改变setState，render()重新执行\n//   render(){\n//     const {data} = this.state;\n//     return <ul>\n//       {\n//         data.map(\n//           (item)=><li>{item.title}</li>\n//         )\n//       }\n//     </ul>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo />,\n//   document.getElementById('root')\n// )\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n\n// const List = (props) =>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// class Demo extends React.Component{\n//   constructor(){\n//     super();\n//     //声明状态\n//     this.state = {\n//       data:[]\n//     }\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then(({data})=>{\n//       this.setState({data})\n//     })\n//   }\n//   render(){\n//     const {data} = this.state;\n//     return <List data={data}/>\n//   }\n// }\n\n// ReactDOM.render(\n//   <Demo />,\n//   document.getElementById('root')\n// )\n\n\n// alt shift + 上下键    复制一行\n// alt + 上下键          移动一行\n// 按住alt,鼠标点击\n// ctrl + shift + 左右键   选中整个单词\n\n\n\n\n\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Control from './components/Control';\n// import Home from './pages/Home';\n\n// let List = (props)=>{\n//   return <ul>\n//     {\n//       props.data.map(\n//         (item)=><li key={item.id}>{item.title}</li>\n//       )\n//     }\n//   </ul>\n// }\n\n// const Buttons = ()=>{\n//   const btns = [1,2,3,4,5];\n//   const handleClick=(num)=>{\n//     //事件对象\n//     console.log(num)\n//   }\n//   return <div>\n//     {\n//       btns.map(\n//         (item)=>\n//         <button key={item} onClick={()=>this.getData(item)} > {item} </button>\n//       )\n//     }\n//   </div>\n// }\n\n// class Home extends React.Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       data:[]\n//     }\n//   }\n//   componentDidMount(){\n//     fetch('https://cnodejs.org/api/v1/topics')\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   handleClick=()=>{\n//     console.log('hello')\n//   }\n//   getData=(item)=>{\n//     fetch('https://cnodejs.org/api/v1/topics?page='+item)\n//     .then(res=>res.json())\n//     .then( ({data}) => {\n//       this.setState({data})\n//     })\n//   }\n//   render(){\n//     const{data}=this.state;\n//     const btns=[1,2,3,4,5];\n//     const handleClick=(num)=>{\n//       console.log(num);\n//     }\n//     return <div>\n//         {btns.map((item)=>(\n//         <button key={item} onClick={()=>this.getData(item)}>\n//         {item}\n//         </button>))}\n//         {/* <button onClick={this.handleClick}>click</button> */}\n//         {/* <Buttons /> */}\n//         <List data={data}/>\n         \n//     </div>\n    \n//   }\n// }\n\n\n// import Demo01 from './components/Demo01';\n// import App from './pages/App';\n// import Hoc , {Detail} from './pages/Hoc';\n// import Hook from './pages/Hook';\n// import Context from './components/Context';\n\n\n// ReactDOM.render(\n\n//   <Control />,\n//   <Demo01/>,\n//   <App />,\n\n// <div>\n//   <Hoc /><Detail />\n// </div>,\n\n\n// <Context.Provider value='123'>\n//     <Hook />\n// </Context.Provider>,\n\n\n//   <Home />,\n//   document.getElementById('root')\n\n  \n// );"],"sourceRoot":""}